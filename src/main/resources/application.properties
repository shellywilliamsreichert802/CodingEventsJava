# Database connection settings
spring.datasource.url=jdbc:mysql://localhost:3306/coding_events
spring.datasource.username=coding_events
spring.datasource.password=Learntocode

# Specify the DBMS
spring.jpa.database = MYSQL

# Show or not log for each sql query
spring.jpa.show-sql = true 
#  setting to true show behind scenes when run application

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#CH17 Videos - first we set up database and configure database to connect to our Spring application, second to configure our persistent class (in Event.java class put @Entity, created EventResponsitory to query classes of that type out of database, then used EventRepository in our controller to insert & retrieve event objects from our controller) to be able to be stored by Hibernate
#Common steps include configuring model class to be persistant, creating repository interface, then using interface in controller - use over and over as introduce models into application